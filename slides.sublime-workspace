{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"d",
				"d-b	display: block;"
			],
			[
				"chart",
				"chartDemographic"
			],
			[
				"value",
				"valueField"
			],
			[
				"result",
				"result_object"
			],
			[
				"filter",
				"filterExp"
			],
			[
				"form",
				"form_validation"
			],
			[
				"php",
				"php"
			],
			[
				"de",
				"defaultVal"
			]
		]
	},
	"buffers":
	[
		{
			"file": "slide.html",
			"settings":
			{
				"buffer_size": 6274,
				"line_ending": "Unix"
			}
		},
		{
			"file": "index.php",
			"settings":
			{
				"buffer_size": 26897,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "/*!\n * jQuery Cycle Plugin (with Transition Definitions)\n * Examples and documentation at: http://jquery.malsup.com/cycle/\n * Copyright (c) 2007-2012 M. Alsup\n * Version: 2.9999.81 (15-JAN-2013)\n * Dual licensed under the MIT and GPL licenses.\n * http://jquery.malsup.com/license.html\n * Requires: jQuery v1.7.1 or later\n */\n;(function($, undefined) {\n\"use strict\";\n\nvar ver = '2.9999.81';\n\nfunction debug(s) {\n	if ($.fn.cycle.debug)\n		//log(s);\n}		\nfunction log() {\n	if (window.console && console.log)\n		//console.log('[cycle] ' + Array.prototype.join.call(arguments,' '));\n}\n$.expr[':'].paused = function(el) {\n	return el.cyclePause;\n};\n\n\n// the options arg can be...\n//   a number  - indicates an immediate transition should occur to the given slide index\n//   a string  - 'pause', 'resume', 'toggle', 'next', 'prev', 'stop', 'destroy' or the name of a transition effect (ie, 'fade', 'zoom', etc)\n//   an object - properties to control the slideshow\n//\n// the arg2 arg can be...\n//   the name of an fx (only used in conjunction with a numeric value for 'options')\n//   the value true (only used in first arg == 'resume') and indicates\n//	 that the resume should occur immediately (not wait for next timeout)\n\n$.fn.cycle = function(options, arg2) {\n	var o = { s: this.selector, c: this.context };\n\n	// in 1.3+ we can fix mistakes with the ready state\n	if (this.length === 0 && options != 'stop') {\n		if (!$.isReady && o.s) {\n			log('DOM not ready, queuing slideshow');\n			$(function() {\n				$(o.s,o.c).cycle(options,arg2);\n			});\n			return this;\n		}\n		// is your DOM ready?  http://docs.jquery.com/Tutorials:Introducing_$(document).ready()\n		log('terminating; zero elements found by selector' + ($.isReady ? '' : ' (DOM not ready)'));\n		return this;\n	}\n\n	// iterate the matched nodeset\n	return this.each(function() {\n		var opts = handleArguments(this, options, arg2);\n		if (opts === false)\n			return;\n\n		opts.updateActivePagerLink = opts.updateActivePagerLink || $.fn.cycle.updateActivePagerLink;\n		\n		// stop existing slideshow for this container (if there is one)\n		if (this.cycleTimeout)\n			clearTimeout(this.cycleTimeout);\n		this.cycleTimeout = this.cyclePause = 0;\n		this.cycleStop = 0; // issue #108\n\n		var $cont = $(this);\n		var $slides = opts.slideExpr ? $(opts.slideExpr, this) : $cont.children();\n		var els = $slides.get();\n\n		if (els.length < 2) {\n			log('terminating; too few slides: ' + els.length);\n			return;\n		}\n\n		var opts2 = buildOptions($cont, $slides, els, opts, o);\n		if (opts2 === false)\n			return;\n\n		var startTime = opts2.continuous ? 10 : getTimeout(els[opts2.currSlide], els[opts2.nextSlide], opts2, !opts2.backwards);\n\n		// if it's an auto slideshow, kick it off\n		if (startTime) {\n			startTime += (opts2.delay || 0);\n			if (startTime < 10)\n				startTime = 10;\n			debug('first timeout: ' + startTime);\n			this.cycleTimeout = setTimeout(function(){go(els,opts2,0,!opts.backwards);}, startTime);\n		}\n	});\n};\n\nfunction triggerPause(cont, byHover, onPager) {\n	var opts = $(cont).data('cycle.opts');\n	if (!opts)\n		return;\n	var paused = !!cont.cyclePause;\n	if (paused && opts.paused)\n		opts.paused(cont, opts, byHover, onPager);\n	else if (!paused && opts.resumed)\n		opts.resumed(cont, opts, byHover, onPager);\n}\n\n// process the args that were passed to the plugin fn\nfunction handleArguments(cont, options, arg2) {\n	if (cont.cycleStop === undefined)\n		cont.cycleStop = 0;\n	if (options === undefined || options === null)\n		options = {};\n	if (options.constructor == String) {\n		switch(options) {\n		case 'destroy':\n		case 'stop':\n			var opts = $(cont).data('cycle.opts');\n			if (!opts)\n				return false;\n			cont.cycleStop++; // callbacks look for change\n			if (cont.cycleTimeout)\n				clearTimeout(cont.cycleTimeout);\n			cont.cycleTimeout = 0;\n			if (opts.elements)\n				$(opts.elements).stop();\n			$(cont).removeData('cycle.opts');\n			if (options == 'destroy')\n				destroy(cont, opts);\n			return false;\n		case 'toggle':\n			cont.cyclePause = (cont.cyclePause === 1) ? 0 : 1;\n			checkInstantResume(cont.cyclePause, arg2, cont);\n			triggerPause(cont);\n			return false;\n		case 'pause':\n			cont.cyclePause = 1;\n			triggerPause(cont);\n			return false;\n		case 'resume':\n			cont.cyclePause = 0;\n			checkInstantResume(false, arg2, cont);\n			triggerPause(cont);\n			return false;\n		case 'prev':\n		case 'next':\n			opts = $(cont).data('cycle.opts');\n			if (!opts) {\n				log('options not found, \"prev/next\" ignored');\n				return false;\n			}\n			$.fn.cycle[options](opts);\n			return false;\n		default:\n			options = { fx: options };\n		}\n		return options;\n	}\n	else if (options.constructor == Number) {\n		// go to the requested slide\n		var num = options;\n		options = $(cont).data('cycle.opts');\n		if (!options) {\n			log('options not found, can not advance slide');\n			return false;\n		}\n		if (num < 0 || num >= options.elements.length) {\n			log('invalid slide index: ' + num);\n			return false;\n		}\n		options.nextSlide = num;\n		if (cont.cycleTimeout) {\n			clearTimeout(cont.cycleTimeout);\n			cont.cycleTimeout = 0;\n		}\n		if (typeof arg2 == 'string')\n			options.oneTimeFx = arg2;\n		go(options.elements, options, 1, num >= options.currSlide);\n		return false;\n	}\n	return options;\n	\n	function checkInstantResume(isPaused, arg2, cont) {\n		if (!isPaused && arg2 === true) { // resume now!\n			var options = $(cont).data('cycle.opts');\n			if (!options) {\n				log('options not found, can not resume');\n				return false;\n			}\n			if (cont.cycleTimeout) {\n				clearTimeout(cont.cycleTimeout);\n				cont.cycleTimeout = 0;\n			}\n			go(options.elements, options, 1, !options.backwards);\n		}\n	}\n}\n\nfunction removeFilter(el, opts) {\n	if (!$.support.opacity && opts.cleartype && el.style.filter) {\n		try { el.style.removeAttribute('filter'); }\n		catch(smother) {} // handle old opera versions\n	}\n}\n\n// unbind event handlers\nfunction destroy(cont, opts) {\n	if (opts.next)\n		$(opts.next).unbind(opts.prevNextEvent);\n	if (opts.prev)\n		$(opts.prev).unbind(opts.prevNextEvent);\n	\n	if (opts.pager || opts.pagerAnchorBuilder)\n		$.each(opts.pagerAnchors || [], function() {\n			this.unbind().remove();\n		});\n	opts.pagerAnchors = null;\n	$(cont).unbind('mouseenter.cycle mouseleave.cycle');\n	if (opts.destroy) // callback\n		opts.destroy(opts);\n}\n\n// one-time initialization\nfunction buildOptions($cont, $slides, els, options, o) {\n	var startingSlideSpecified;\n	// support metadata plugin (v1.0 and v2.0)\n	var opts = $.extend({}, $.fn.cycle.defaults, options || {}, $.metadata ? $cont.metadata() : $.meta ? $cont.data() : {});\n	var meta = $.isFunction($cont.data) ? $cont.data(opts.metaAttr) : null;\n	if (meta)\n		opts = $.extend(opts, meta);\n	if (opts.autostop)\n		opts.countdown = opts.autostopCount || els.length;\n\n	var cont = $cont[0];\n	$cont.data('cycle.opts', opts);\n	opts.$cont = $cont;\n	opts.stopCount = cont.cycleStop;\n	opts.elements = els;\n	opts.before = opts.before ? [opts.before] : [];\n	opts.after = opts.after ? [opts.after] : [];\n\n	// push some after callbacks\n	if (!$.support.opacity && opts.cleartype)\n		opts.after.push(function() { removeFilter(this, opts); });\n	if (opts.continuous)\n		opts.after.push(function() { go(els,opts,0,!opts.backwards); });\n\n	saveOriginalOpts(opts);\n\n	// clearType corrections\n	if (!$.support.opacity && opts.cleartype && !opts.cleartypeNoBg)\n		clearTypeFix($slides);\n\n	// container requires non-static position so that slides can be position within\n	if ($cont.css('position') == 'static')\n		$cont.css('position', 'relative');\n	if (opts.width)\n		$cont.width(opts.width);\n	if (opts.height && opts.height != 'auto')\n		$cont.height(opts.height);\n\n	if (opts.startingSlide !== undefined) {\n		opts.startingSlide = parseInt(opts.startingSlide,10);\n		if (opts.startingSlide >= els.length || opts.startSlide < 0)\n			opts.startingSlide = 0; // catch bogus input\n		else \n			startingSlideSpecified = true;\n	}\n	else if (opts.backwards)\n		opts.startingSlide = els.length - 1;\n	else\n		opts.startingSlide = 0;\n\n	// if random, mix up the slide array\n	if (opts.random) {\n		opts.randomMap = [];\n		for (var i = 0; i < els.length; i++)\n			opts.randomMap.push(i);\n		opts.randomMap.sort(function(a,b) {return Math.random() - 0.5;});\n		if (startingSlideSpecified) {\n			// try to find the specified starting slide and if found set start slide index in the map accordingly\n			for ( var cnt = 0; cnt < els.length; cnt++ ) {\n				if ( opts.startingSlide == opts.randomMap[cnt] ) {\n					opts.randomIndex = cnt;\n				}\n			}\n		}\n		else {\n			opts.randomIndex = 1;\n			opts.startingSlide = opts.randomMap[1];\n		}\n	}\n	else if (opts.startingSlide >= els.length)\n		opts.startingSlide = 0; // catch bogus input\n	opts.currSlide = opts.startingSlide || 0;\n	var first = opts.startingSlide;\n\n	// set position and zIndex on all the slides\n	$slides.css({position: 'absolute', top:0, left:0}).hide().each(function(i) {\n		var z;\n		if (opts.backwards)\n			z = first ? i <= first ? els.length + (i-first) : first-i : els.length-i;\n		else\n			z = first ? i >= first ? els.length - (i-first) : first-i : els.length-i;\n		$(this).css('z-index', z);\n	});\n\n	// make sure first slide is visible\n	$(els[first]).css('opacity',1).show(); // opacity bit needed to handle restart use case\n	removeFilter(els[first], opts);\n\n	// stretch slides\n	if (opts.fit) {\n		if (!opts.aspect) {\n	        if (opts.width)\n	            $slides.width(opts.width);\n	        if (opts.height && opts.height != 'auto')\n	            $slides.height(opts.height);\n		} else {\n			$slides.each(function(){\n				var $slide = $(this);\n				var ratio = (opts.aspect === true) ? $slide.width()/$slide.height() : opts.aspect;\n				if( opts.width && $slide.width() != opts.width ) {\n					$slide.width( opts.width );\n					$slide.height( opts.width / ratio );\n				}\n\n				if( opts.height && $slide.height() < opts.height ) {\n					$slide.height( opts.height );\n					$slide.width( opts.height * ratio );\n				}\n			});\n		}\n	}\n\n	if (opts.center && ((!opts.fit) || opts.aspect)) {\n		$slides.each(function(){\n			var $slide = $(this);\n			$slide.css({\n				\"margin-left\": opts.width ?\n					((opts.width - $slide.width()) / 2) + \"px\" :\n					0,\n				\"margin-top\": opts.height ?\n					((opts.height - $slide.height()) / 2) + \"px\" :\n					0\n			});\n		});\n	}\n\n	if (opts.center && !opts.fit && !opts.slideResize) {\n		$slides.each(function(){\n			var $slide = $(this);\n			$slide.css({\n				\"margin-left\": opts.width ? ((opts.width - $slide.width()) / 2) + \"px\" : 0,\n				\"margin-top\": opts.height ? ((opts.height - $slide.height()) / 2) + \"px\" : 0\n			});\n		});\n	}\n		\n	// stretch container\n	var reshape = (opts.containerResize || opts.containerResizeHeight) && !$cont.innerHeight();\n	if (reshape) { // do this only if container has no size http://tinyurl.com/da2oa9\n		var maxw = 0, maxh = 0;\n		for(var j=0; j < els.length; j++) {\n			var $e = $(els[j]), e = $e[0], w = $e.outerWidth(), h = $e.outerHeight();\n			if (!w) w = e.offsetWidth || e.width || $e.attr('width');\n			if (!h) h = e.offsetHeight || e.height || $e.attr('height');\n			maxw = w > maxw ? w : maxw;\n			maxh = h > maxh ? h : maxh;\n		}\n		if (opts.containerResize && maxw > 0 && maxh > 0)\n			$cont.css({width:maxw+'px',height:maxh+'px'});\n		if (opts.containerResizeHeight && maxh > 0)\n			$cont.css({height:maxh+'px'});\n	}\n\n	var pauseFlag = false;  // https://github.com/malsup/cycle/issues/44\n	if (opts.pause)\n		$cont.bind('mouseenter.cycle', function(){\n			pauseFlag = true;\n			this.cyclePause++;\n			triggerPause(cont, true);\n		}).bind('mouseleave.cycle', function(){\n				if (pauseFlag)\n					this.cyclePause--;\n				triggerPause(cont, true);\n		});\n\n	if (supportMultiTransitions(opts) === false)\n		return false;\n\n	// apparently a lot of people use image slideshows without height/width attributes on the images.\n	// Cycle 2.50+ requires the sizing info for every slide; this block tries to deal with that.\n	var requeue = false;\n	options.requeueAttempts = options.requeueAttempts || 0;\n	$slides.each(function() {\n		// try to get height/width of each slide\n		var $el = $(this);\n		this.cycleH = (opts.fit && opts.height) ? opts.height : ($el.height() || this.offsetHeight || this.height || $el.attr('height') || 0);\n		this.cycleW = (opts.fit && opts.width) ? opts.width : ($el.width() || this.offsetWidth || this.width || $el.attr('width') || 0);\n\n		if ( $el.is('img') ) {\n			var loading = (this.cycleH === 0 && this.cycleW === 0 && !this.complete);\n			// don't requeue for images that are still loading but have a valid size\n			if (loading) {\n				if (o.s && opts.requeueOnImageNotLoaded && ++options.requeueAttempts < 100) { // track retry count so we don't loop forever\n					log(options.requeueAttempts,' - img slide not loaded, requeuing slideshow: ', this.src, this.cycleW, this.cycleH);\n					setTimeout(function() {$(o.s,o.c).cycle(options);}, opts.requeueTimeout);\n					requeue = true;\n					return false; // break each loop\n				}\n				else {\n					log('could not determine size of image: '+this.src, this.cycleW, this.cycleH);\n				}\n			}\n		}\n		return true;\n	});\n\n	if (requeue)\n		return false;\n\n	opts.cssBefore = opts.cssBefore || {};\n	opts.cssAfter = opts.cssAfter || {};\n	opts.cssFirst = opts.cssFirst || {};\n	opts.animIn = opts.animIn || {};\n	opts.animOut = opts.animOut || {};\n\n	$slides.not(':eq('+first+')').css(opts.cssBefore);\n	$($slides[first]).css(opts.cssFirst);\n\n	if (opts.timeout) {\n		opts.timeout = parseInt(opts.timeout,10);\n		// ensure that timeout and speed settings are sane\n		if (opts.speed.constructor == String)\n			opts.speed = $.fx.speeds[opts.speed] || parseInt(opts.speed,10);\n		if (!opts.sync)\n			opts.speed = opts.speed / 2;\n		\n		var buffer = opts.fx == 'none' ? 0 : opts.fx == 'shuffle' ? 500 : 250;\n		while((opts.timeout - opts.speed) < buffer) // sanitize timeout\n			opts.timeout += opts.speed;\n	}\n	if (opts.easing)\n		opts.easeIn = opts.easeOut = opts.easing;\n	if (!opts.speedIn)\n		opts.speedIn = opts.speed;\n	if (!opts.speedOut)\n		opts.speedOut = opts.speed;\n\n	opts.slideCount = els.length;\n	opts.currSlide = opts.lastSlide = first;\n	if (opts.random) {\n		if (++opts.randomIndex == els.length)\n			opts.randomIndex = 0;\n		opts.nextSlide = opts.randomMap[opts.randomIndex];\n	}\n	else if (opts.backwards)\n		opts.nextSlide = opts.startingSlide === 0 ? (els.length-1) : opts.startingSlide-1;\n	else\n		opts.nextSlide = opts.startingSlide >= (els.length-1) ? 0 : opts.startingSlide+1;\n\n	// run transition init fn\n	if (!opts.multiFx) {\n		var init = $.fn.cycle.transitions[opts.fx];\n		if ($.isFunction(init))\n			init($cont, $slides, opts);\n		else if (opts.fx != 'custom' && !opts.multiFx) {\n			log('unknown transition: ' + opts.fx,'; slideshow terminating');\n			return false;\n		}\n	}\n\n	// fire artificial events\n	var e0 = $slides[first];\n	if (!opts.skipInitializationCallbacks) {\n		if (opts.before.length)\n			opts.before[0].apply(e0, [e0, e0, opts, true]);\n		if (opts.after.length)\n			opts.after[0].apply(e0, [e0, e0, opts, true]);\n	}\n	if (opts.next)\n		$(opts.next).bind(opts.prevNextEvent,function(){return advance(opts,1);});\n	if (opts.prev)\n		$(opts.prev).bind(opts.prevNextEvent,function(){return advance(opts,0);});\n	if (opts.pager || opts.pagerAnchorBuilder)\n		buildPager(els,opts);\n\n	exposeAddSlide(opts, els);\n\n	return opts;\n}\n\n// save off original opts so we can restore after clearing state\nfunction saveOriginalOpts(opts) {\n	opts.original = { before: [], after: [] };\n	opts.original.cssBefore = $.extend({}, opts.cssBefore);\n	opts.original.cssAfter  = $.extend({}, opts.cssAfter);\n	opts.original.animIn	= $.extend({}, opts.animIn);\n	opts.original.animOut   = $.extend({}, opts.animOut);\n	$.each(opts.before, function() { opts.original.before.push(this); });\n	$.each(opts.after,  function() { opts.original.after.push(this); });\n}\n\nfunction supportMultiTransitions(opts) {\n	var i, tx, txs = $.fn.cycle.transitions;\n	// look for multiple effects\n	if (opts.fx.indexOf(',') > 0) {\n		opts.multiFx = true;\n		opts.fxs = opts.fx.replace(/\\s*/g,'').split(',');\n		// discard any bogus effect names\n		for (i=0; i < opts.fxs.length; i++) {\n			var fx = opts.fxs[i];\n			tx = txs[fx];\n			if (!tx || !txs.hasOwnProperty(fx) || !$.isFunction(tx)) {\n				log('discarding unknown transition: ',fx);\n				opts.fxs.splice(i,1);\n				i--;\n			}\n		}\n		// if we have an empty list then we threw everything away!\n		if (!opts.fxs.length) {\n			log('No valid transitions named; slideshow terminating.');\n			return false;\n		}\n	}\n	else if (opts.fx == 'all') {  // auto-gen the list of transitions\n		opts.multiFx = true;\n		opts.fxs = [];\n		for (var p in txs) {\n			if (txs.hasOwnProperty(p)) {\n				tx = txs[p];\n				if (txs.hasOwnProperty(p) && $.isFunction(tx))\n					opts.fxs.push(p);\n			}\n		}\n	}\n	if (opts.multiFx && opts.randomizeEffects) {\n		// munge the fxs array to make effect selection random\n		var r1 = Math.floor(Math.random() * 20) + 30;\n		for (i = 0; i < r1; i++) {\n			var r2 = Math.floor(Math.random() * opts.fxs.length);\n			opts.fxs.push(opts.fxs.splice(r2,1)[0]);\n		}\n		debug('randomized fx sequence: ',opts.fxs);\n	}\n	return true;\n}\n\n// provide a mechanism for adding slides after the slideshow has started\nfunction exposeAddSlide(opts, els) {\n	opts.addSlide = function(newSlide, prepend) {\n		var $s = $(newSlide), s = $s[0];\n		if (!opts.autostopCount)\n			opts.countdown++;\n		els[prepend?'unshift':'push'](s);\n		if (opts.els)\n			opts.els[prepend?'unshift':'push'](s); // shuffle needs this\n		opts.slideCount = els.length;\n\n		// add the slide to the random map and resort\n		if (opts.random) {\n			opts.randomMap.push(opts.slideCount-1);\n			opts.randomMap.sort(function(a,b) {return Math.random() - 0.5;});\n		}\n\n		$s.css('position','absolute');\n		$s[prepend?'prependTo':'appendTo'](opts.$cont);\n\n		if (prepend) {\n			opts.currSlide++;\n			opts.nextSlide++;\n		}\n\n		if (!$.support.opacity && opts.cleartype && !opts.cleartypeNoBg)\n			clearTypeFix($s);\n\n		if (opts.fit && opts.width)\n			$s.width(opts.width);\n		if (opts.fit && opts.height && opts.height != 'auto')\n			$s.height(opts.height);\n		s.cycleH = (opts.fit && opts.height) ? opts.height : $s.height();\n		s.cycleW = (opts.fit && opts.width) ? opts.width : $s.width();\n\n		$s.css(opts.cssBefore);\n\n		if (opts.pager || opts.pagerAnchorBuilder)\n			$.fn.cycle.createPagerAnchor(els.length-1, s, $(opts.pager), els, opts);\n\n		if ($.isFunction(opts.onAddSlide))\n			opts.onAddSlide($s);\n		else\n			$s.hide(); // default behavior\n	};\n}\n\n// reset internal state; we do this on every pass in order to support multiple effects\n$.fn.cycle.resetState = function(opts, fx) {\n	fx = fx || opts.fx;\n	opts.before = []; opts.after = [];\n	opts.cssBefore = $.extend({}, opts.original.cssBefore);\n	opts.cssAfter  = $.extend({}, opts.original.cssAfter);\n	opts.animIn	= $.extend({}, opts.original.animIn);\n	opts.animOut   = $.extend({}, opts.original.animOut);\n	opts.fxFn = null;\n	$.each(opts.original.before, function() { opts.before.push(this); });\n	$.each(opts.original.after,  function() { opts.after.push(this); });\n\n	// re-init\n	var init = $.fn.cycle.transitions[fx];\n	if ($.isFunction(init))\n		init(opts.$cont, $(opts.elements), opts);\n};\n\n// this is the main engine fn, it handles the timeouts, callbacks and slide index mgmt\nfunction go(els, opts, manual, fwd) {\n	var p = opts.$cont[0], curr = els[opts.currSlide], next = els[opts.nextSlide];\n\n	// opts.busy is true if we're in the middle of an animation\n	if (manual && opts.busy && opts.manualTrump) {\n		// let manual transitions requests trump active ones\n		debug('manualTrump in go(), stopping active transition');\n		$(els).stop(true,true);\n		opts.busy = 0;\n		clearTimeout(p.cycleTimeout);\n	}\n\n	// don't begin another timeout-based transition if there is one active\n	if (opts.busy) {\n		debug('transition active, ignoring new tx request');\n		return;\n	}\n\n\n	// stop cycling if we have an outstanding stop request\n	if (p.cycleStop != opts.stopCount || p.cycleTimeout === 0 && !manual)\n		return;\n\n	// check to see if we should stop cycling based on autostop options\n	if (!manual && !p.cyclePause && !opts.bounce &&\n		((opts.autostop && (--opts.countdown <= 0)) ||\n		(opts.nowrap && !opts.random && opts.nextSlide < opts.currSlide))) {\n		if (opts.end)\n			opts.end(opts);\n		return;\n	}\n\n	// if slideshow is paused, only transition on a manual trigger\n	var changed = false;\n	if ((manual || !p.cyclePause) && (opts.nextSlide != opts.currSlide)) {\n		changed = true;\n		var fx = opts.fx;\n		// keep trying to get the slide size if we don't have it yet\n		curr.cycleH = curr.cycleH || $(curr).height();\n		curr.cycleW = curr.cycleW || $(curr).width();\n		next.cycleH = next.cycleH || $(next).height();\n		next.cycleW = next.cycleW || $(next).width();\n\n		// support multiple transition types\n		if (opts.multiFx) {\n			if (fwd && (opts.lastFx === undefined || ++opts.lastFx >= opts.fxs.length))\n				opts.lastFx = 0;\n			else if (!fwd && (opts.lastFx === undefined || --opts.lastFx < 0))\n				opts.lastFx = opts.fxs.length - 1;\n			fx = opts.fxs[opts.lastFx];\n		}\n\n		// one-time fx overrides apply to:  $('div').cycle(3,'zoom');\n		if (opts.oneTimeFx) {\n			fx = opts.oneTimeFx;\n			opts.oneTimeFx = null;\n		}\n\n		$.fn.cycle.resetState(opts, fx);\n\n		// run the before callbacks\n		if (opts.before.length)\n			$.each(opts.before, function(i,o) {\n				if (p.cycleStop != opts.stopCount) return;\n				o.apply(next, [curr, next, opts, fwd]);\n			});\n\n		// stage the after callacks\n		var after = function() {\n			opts.busy = 0;\n			$.each(opts.after, function(i,o) {\n				if (p.cycleStop != opts.stopCount) return;\n				o.apply(next, [curr, next, opts, fwd]);\n			});\n			if (!p.cycleStop) {\n				// queue next transition\n				queueNext();\n			}\n		};\n\n		debug('tx firing('+fx+'); currSlide: ' + opts.currSlide + '; nextSlide: ' + opts.nextSlide);\n		\n		// get ready to perform the transition\n		opts.busy = 1;\n		if (opts.fxFn) // fx function provided?\n			opts.fxFn(curr, next, opts, after, fwd, manual && opts.fastOnEvent);\n		else if ($.isFunction($.fn.cycle[opts.fx])) // fx plugin ?\n			$.fn.cycle[opts.fx](curr, next, opts, after, fwd, manual && opts.fastOnEvent);\n		else\n			$.fn.cycle.custom(curr, next, opts, after, fwd, manual && opts.fastOnEvent);\n	}\n	else {\n		queueNext();\n	}\n\n	if (changed || opts.nextSlide == opts.currSlide) {\n		// calculate the next slide\n		var roll;\n		opts.lastSlide = opts.currSlide;\n		if (opts.random) {\n			opts.currSlide = opts.nextSlide;\n			if (++opts.randomIndex == els.length) {\n				opts.randomIndex = 0;\n				opts.randomMap.sort(function(a,b) {return Math.random() - 0.5;});\n			}\n			opts.nextSlide = opts.randomMap[opts.randomIndex];\n			if (opts.nextSlide == opts.currSlide)\n				opts.nextSlide = (opts.currSlide == opts.slideCount - 1) ? 0 : opts.currSlide + 1;\n		}\n		else if (opts.backwards) {\n			roll = (opts.nextSlide - 1) < 0;\n			if (roll && opts.bounce) {\n				opts.backwards = !opts.backwards;\n				opts.nextSlide = 1;\n				opts.currSlide = 0;\n			}\n			else {\n				opts.nextSlide = roll ? (els.length-1) : opts.nextSlide-1;\n				opts.currSlide = roll ? 0 : opts.nextSlide+1;\n			}\n		}\n		else { // sequence\n			roll = (opts.nextSlide + 1) == els.length;\n			if (roll && opts.bounce) {\n				opts.backwards = !opts.backwards;\n				opts.nextSlide = els.length-2;\n				opts.currSlide = els.length-1;\n			}\n			else {\n				opts.nextSlide = roll ? 0 : opts.nextSlide+1;\n				opts.currSlide = roll ? els.length-1 : opts.nextSlide-1;\n			}\n		}\n	}\n	if (changed && opts.pager)\n		opts.updateActivePagerLink(opts.pager, opts.currSlide, opts.activePagerClass);\n	\n	function queueNext() {\n		// stage the next transition\n		var ms = 0, timeout = opts.timeout;\n		if (opts.timeout && !opts.continuous) {\n			ms = getTimeout(els[opts.currSlide], els[opts.nextSlide], opts, fwd);\n         if (opts.fx == 'shuffle')\n            ms -= opts.speedOut;\n      }\n		else if (opts.continuous && p.cyclePause) // continuous shows work off an after callback, not this timer logic\n			ms = 10;\n		if (ms > 0)\n			p.cycleTimeout = setTimeout(function(){ go(els, opts, 0, !opts.backwards); }, ms);\n	}\n}\n\n// invoked after transition\n$.fn.cycle.updateActivePagerLink = function(pager, currSlide, clsName) {\n   $(pager).each(function() {\n       $(this).children().removeClass(clsName).eq(currSlide).addClass(clsName);\n   });\n};\n\n// calculate timeout value for current transition\nfunction getTimeout(curr, next, opts, fwd) {\n	if (opts.timeoutFn) {\n		// call user provided calc fn\n		var t = opts.timeoutFn.call(curr,curr,next,opts,fwd);\n		while (opts.fx != 'none' && (t - opts.speed) < 250) // sanitize timeout\n			t += opts.speed;\n		debug('calculated timeout: ' + t + '; speed: ' + opts.speed);\n		if (t !== false)\n			return t;\n	}\n	return opts.timeout;\n}\n\n// expose next/prev function, caller must pass in state\n$.fn.cycle.next = function(opts) { advance(opts,1); };\n$.fn.cycle.prev = function(opts) { advance(opts,0);};\n\n// advance slide forward or back\nfunction advance(opts, moveForward) {\n	var val = moveForward ? 1 : -1;\n	var els = opts.elements;\n	var p = opts.$cont[0], timeout = p.cycleTimeout;\n	if (timeout) {\n		clearTimeout(timeout);\n		p.cycleTimeout = 0;\n	}\n	if (opts.random && val < 0) {\n		// move back to the previously display slide\n		opts.randomIndex--;\n		if (--opts.randomIndex == -2)\n			opts.randomIndex = els.length-2;\n		else if (opts.randomIndex == -1)\n			opts.randomIndex = els.length-1;\n		opts.nextSlide = opts.randomMap[opts.randomIndex];\n	}\n	else if (opts.random) {\n		opts.nextSlide = opts.randomMap[opts.randomIndex];\n	}\n	else {\n		opts.nextSlide = opts.currSlide + val;\n		if (opts.nextSlide < 0) {\n			if (opts.nowrap) return false;\n			opts.nextSlide = els.length - 1;\n		}\n		else if (opts.nextSlide >= els.length) {\n			if (opts.nowrap) return false;\n			opts.nextSlide = 0;\n		}\n	}\n\n	var cb = opts.onPrevNextEvent || opts.prevNextClick; // prevNextClick is deprecated\n	if ($.isFunction(cb))\n		cb(val > 0, opts.nextSlide, els[opts.nextSlide]);\n	go(els, opts, 1, moveForward);\n	return false;\n}\n\nfunction buildPager(els, opts) {\n	var $p = $(opts.pager);\n	$.each(els, function(i,o) {\n		$.fn.cycle.createPagerAnchor(i,o,$p,els,opts);\n	});\n	opts.updateActivePagerLink(opts.pager, opts.startingSlide, opts.activePagerClass);\n}\n\n$.fn.cycle.createPagerAnchor = function(i, el, $p, els, opts) {\n	var a;\n	if ($.isFunction(opts.pagerAnchorBuilder)) {\n		a = opts.pagerAnchorBuilder(i,el);\n		debug('pagerAnchorBuilder('+i+', el) returned: ' + a);\n	}\n	else\n		a = '<a href=\"#\">'+(i+1)+'</a>';\n		\n	if (!a)\n		return;\n	var $a = $(a);\n	// don't reparent if anchor is in the dom\n	if ($a.parents('body').length === 0) {\n		var arr = [];\n		if ($p.length > 1) {\n			$p.each(function() {\n				var $clone = $a.clone(true);\n				$(this).append($clone);\n				arr.push($clone[0]);\n			});\n			$a = $(arr);\n		}\n		else {\n			$a.appendTo($p);\n		}\n	}\n\n	opts.pagerAnchors =  opts.pagerAnchors || [];\n	opts.pagerAnchors.push($a);\n	\n	var pagerFn = function(e) {\n		e.preventDefault();\n		opts.nextSlide = i;\n		var p = opts.$cont[0], timeout = p.cycleTimeout;\n		if (timeout) {\n			clearTimeout(timeout);\n			p.cycleTimeout = 0;\n		}\n		var cb = opts.onPagerEvent || opts.pagerClick; // pagerClick is deprecated\n		if ($.isFunction(cb))\n			cb(opts.nextSlide, els[opts.nextSlide]);\n		go(els,opts,1,opts.currSlide < i); // trigger the trans\n//		return false; // <== allow bubble\n	};\n	\n	if ( /mouseenter|mouseover/i.test(opts.pagerEvent) ) {\n		$a.hover(pagerFn, function(){/* no-op */} );\n	}\n	else {\n		$a.bind(opts.pagerEvent, pagerFn);\n	}\n	\n	if ( ! /^click/.test(opts.pagerEvent) && !opts.allowPagerClickBubble)\n		$a.bind('click.cycle', function(){return false;}); // suppress click\n	\n	var cont = opts.$cont[0];\n	var pauseFlag = false; // https://github.com/malsup/cycle/issues/44\n	if (opts.pauseOnPagerHover) {\n		$a.hover(\n			function() { \n				pauseFlag = true;\n				cont.cyclePause++; \n				triggerPause(cont,true,true);\n			}, function() { \n				if (pauseFlag)\n					cont.cyclePause--; \n				triggerPause(cont,true,true);\n			} \n		);\n	}\n};\n\n// helper fn to calculate the number of slides between the current and the next\n$.fn.cycle.hopsFromLast = function(opts, fwd) {\n	var hops, l = opts.lastSlide, c = opts.currSlide;\n	if (fwd)\n		hops = c > l ? c - l : opts.slideCount - l;\n	else\n		hops = c < l ? l - c : l + opts.slideCount - c;\n	return hops;\n};\n\n// fix clearType problems in ie6 by setting an explicit bg color\n// (otherwise text slides look horrible during a fade transition)\nfunction clearTypeFix($slides) {\n	debug('applying clearType background-color hack');\n	function hex(s) {\n		s = parseInt(s,10).toString(16);\n		return s.length < 2 ? '0'+s : s;\n	}\n	function getBg(e) {\n		for ( ; e && e.nodeName.toLowerCase() != 'html'; e = e.parentNode) {\n			var v = $.css(e,'background-color');\n			if (v && v.indexOf('rgb') >= 0 ) {\n				var rgb = v.match(/\\d+/g);\n				return '#'+ hex(rgb[0]) + hex(rgb[1]) + hex(rgb[2]);\n			}\n			if (v && v != 'transparent')\n				return v;\n		}\n		return '#ffffff';\n	}\n	$slides.each(function() { $(this).css('background-color', getBg(this)); });\n}\n\n// reset common props before the next transition\n$.fn.cycle.commonReset = function(curr,next,opts,w,h,rev) {\n	$(opts.elements).not(curr).hide();\n	if (typeof opts.cssBefore.opacity == 'undefined')\n		opts.cssBefore.opacity = 1;\n	opts.cssBefore.display = 'block';\n	if (opts.slideResize && w !== false && next.cycleW > 0)\n		opts.cssBefore.width = next.cycleW;\n	if (opts.slideResize && h !== false && next.cycleH > 0)\n		opts.cssBefore.height = next.cycleH;\n	opts.cssAfter = opts.cssAfter || {};\n	opts.cssAfter.display = 'none';\n	$(curr).css('zIndex',opts.slideCount + (rev === true ? 1 : 0));\n	$(next).css('zIndex',opts.slideCount + (rev === true ? 0 : 1));\n};\n\n// the actual fn for effecting a transition\n$.fn.cycle.custom = function(curr, next, opts, cb, fwd, speedOverride) {\n	var $l = $(curr), $n = $(next);\n	var speedIn = opts.speedIn, speedOut = opts.speedOut, easeIn = opts.easeIn, easeOut = opts.easeOut;\n	$n.css(opts.cssBefore);\n	if (speedOverride) {\n		if (typeof speedOverride == 'number')\n			speedIn = speedOut = speedOverride;\n		else\n			speedIn = speedOut = 1;\n		easeIn = easeOut = null;\n	}\n	var fn = function() {\n		$n.animate(opts.animIn, speedIn, easeIn, function() {\n			cb();\n		});\n	};\n	$l.animate(opts.animOut, speedOut, easeOut, function() {\n		$l.css(opts.cssAfter);\n		if (!opts.sync) \n			fn();\n	});\n	if (opts.sync) fn();\n};\n\n// transition definitions - only fade is defined here, transition pack defines the rest\n$.fn.cycle.transitions = {\n	fade: function($cont, $slides, opts) {\n		$slides.not(':eq('+opts.currSlide+')').css('opacity',0);\n		opts.before.push(function(curr,next,opts) {\n			$.fn.cycle.commonReset(curr,next,opts);\n			opts.cssBefore.opacity = 0;\n		});\n		opts.animIn	   = { opacity: 1 };\n		opts.animOut   = { opacity: 0 };\n		opts.cssBefore = { top: 0, left: 0 };\n	}\n};\n\n$.fn.cycle.ver = function() { return ver; };\n\n// override these globally if you like (they are all optional)\n$.fn.cycle.defaults = {\n    activePagerClass: 'activeSlide', // class name used for the active pager link\n    after:            null,     // transition callback (scope set to element that was shown):  function(currSlideElement, nextSlideElement, options, forwardFlag)\n    allowPagerClickBubble: false, // allows or prevents click event on pager anchors from bubbling\n    animIn:           null,     // properties that define how the slide animates in\n    animOut:          null,     // properties that define how the slide animates out\n    aspect:           false,    // preserve aspect ratio during fit resizing, cropping if necessary (must be used with fit option)\n    autostop:         0,        // true to end slideshow after X transitions (where X == slide count)\n    autostopCount:    0,        // number of transitions (optionally used with autostop to define X)\n    backwards:        false,    // true to start slideshow at last slide and move backwards through the stack\n    before:           null,     // transition callback (scope set to element to be shown):     function(currSlideElement, nextSlideElement, options, forwardFlag)\n    center:           null,     // set to true to have cycle add top/left margin to each slide (use with width and height options)\n    cleartype:        !$.support.opacity,  // true if clearType corrections should be applied (for IE)\n    cleartypeNoBg:    false,    // set to true to disable extra cleartype fixing (leave false to force background color setting on slides)\n    containerResize:  1,        // resize container to fit largest slide\n    containerResizeHeight:  0,  // resize containers height to fit the largest slide but leave the width dynamic\n    continuous:       0,        // true to start next transition immediately after current one completes\n    cssAfter:         null,     // properties that defined the state of the slide after transitioning out\n    cssBefore:        null,     // properties that define the initial state of the slide before transitioning in\n    delay:            0,        // additional delay (in ms) for first transition (hint: can be negative)\n    easeIn:           null,     // easing for \"in\" transition\n    easeOut:          null,     // easing for \"out\" transition\n    easing:           null,     // easing method for both in and out transitions\n    end:              null,     // callback invoked when the slideshow terminates (use with autostop or nowrap options): function(options)\n    fastOnEvent:      0,        // force fast transitions when triggered manually (via pager or prev/next); value == time in ms\n    fit:              0,        // force slides to fit container\n    fx:               'fade',   // name of transition effect (or comma separated names, ex: 'fade,scrollUp,shuffle')\n    fxFn:             null,     // function used to control the transition: function(currSlideElement, nextSlideElement, options, afterCalback, forwardFlag)\n    height:           'auto',   // container height (if the 'fit' option is true, the slides will be set to this height as well)\n    manualTrump:      true,     // causes manual transition to stop an active transition instead of being ignored\n    metaAttr:         'cycle',  // data- attribute that holds the option data for the slideshow\n    next:             null,     // element, jQuery object, or jQuery selector string for the element to use as event trigger for next slide\n    nowrap:           0,        // true to prevent slideshow from wrapping\n    onPagerEvent:     null,     // callback fn for pager events: function(zeroBasedSlideIndex, slideElement)\n    onPrevNextEvent:  null,     // callback fn for prev/next events: function(isNext, zeroBasedSlideIndex, slideElement)\n    pager:            null,     // element, jQuery object, or jQuery selector string for the element to use as pager container\n    pagerAnchorBuilder: null,   // callback fn for building anchor links:  function(index, DOMelement)\n    pagerEvent:       'click.cycle', // name of event which drives the pager navigation\n    pause:            0,        // true to enable \"pause on hover\"\n    pauseOnPagerHover: 0,       // true to pause when hovering over pager link\n    prev:             null,     // element, jQuery object, or jQuery selector string for the element to use as event trigger for previous slide\n    prevNextEvent:    'click.cycle',// event which drives the manual transition to the previous or next slide\n    random:           0,        // true for random, false for sequence (not applicable to shuffle fx)\n    randomizeEffects: 1,        // valid when multiple effects are used; true to make the effect sequence random\n    requeueOnImageNotLoaded: true, // requeue the slideshow if any image slides are not yet loaded\n    requeueTimeout:   250,      // ms delay for requeue\n    rev:              0,        // causes animations to transition in reverse (for effects that support it such as scrollHorz/scrollVert/shuffle)\n    shuffle:          null,     // coords for shuffle animation, ex: { top:15, left: 200 }\n    skipInitializationCallbacks: false, // set to true to disable the first before/after callback that occurs prior to any transition\n    slideExpr:        null,     // expression for selecting slides (if something other than all children is required)\n    slideResize:      1,        // force slide width/height to fixed size before every transition\n    speed:            1000,     // speed of the transition (any valid fx speed value)\n    speedIn:          null,     // speed of the 'in' transition\n    speedOut:         null,     // speed of the 'out' transition\n    startingSlide:    undefined,// zero-based index of the first slide to be displayed\n    sync:             1,        // true if in/out transitions should occur simultaneously\n    timeout:          4000,     // milliseconds between slide transitions (0 to disable auto advance)\n    timeoutFn:        null,     // callback for determining per-slide timeout value:  function(currSlideElement, nextSlideElement, options, forwardFlag)\n    updateActivePagerLink: null,// callback fn invoked to update the active pager link (adds/removes activePagerClass style)\n    width:            null      // container width (if the 'fit' option is true, the slides will be set to this width as well)\n};\n\n})(jQuery);\n\n\n/*!\n * jQuery Cycle Plugin Transition Definitions\n * This script is a plugin for the jQuery Cycle Plugin\n * Examples and documentation at: http://malsup.com/jquery/cycle/\n * Copyright (c) 2007-2010 M. Alsup\n * Version:	 2.73\n * Dual licensed under the MIT and GPL licenses:\n * http://www.opensource.org/licenses/mit-license.php\n * http://www.gnu.org/licenses/gpl.html\n */\n(function($) {\n\"use strict\";\n\n//\n// These functions define slide initialization and properties for the named\n// transitions. To save file size feel free to remove any of these that you\n// don't need.\n//\n$.fn.cycle.transitions.none = function($cont, $slides, opts) {\n	opts.fxFn = function(curr,next,opts,after){\n		$(next).show();\n		$(curr).hide();\n		after();\n	};\n};\n\n// not a cross-fade, fadeout only fades out the top slide\n$.fn.cycle.transitions.fadeout = function($cont, $slides, opts) {\n	$slides.not(':eq('+opts.currSlide+')').css({ display: 'block', 'opacity': 1 });\n	opts.before.push(function(curr,next,opts,w,h,rev) {\n		$(curr).css('zIndex',opts.slideCount + (rev !== true ? 1 : 0));\n		$(next).css('zIndex',opts.slideCount + (rev !== true ? 0 : 1));\n	});\n	opts.animIn.opacity = 1;\n	opts.animOut.opacity = 0;\n	opts.cssBefore.opacity = 1;\n	opts.cssBefore.display = 'block';\n	opts.cssAfter.zIndex = 0;\n};\n\n// scrollUp/Down/Left/Right\n$.fn.cycle.transitions.scrollUp = function($cont, $slides, opts) {\n	$cont.css('overflow','hidden');\n	opts.before.push($.fn.cycle.commonReset);\n	var h = $cont.height();\n	opts.cssBefore.top = h;\n	opts.cssBefore.left = 0;\n	opts.cssFirst.top = 0;\n	opts.animIn.top = 0;\n	opts.animOut.top = -h;\n};\n$.fn.cycle.transitions.scrollDown = function($cont, $slides, opts) {\n	$cont.css('overflow','hidden');\n	opts.before.push($.fn.cycle.commonReset);\n	var h = $cont.height();\n	opts.cssFirst.top = 0;\n	opts.cssBefore.top = -h;\n	opts.cssBefore.left = 0;\n	opts.animIn.top = 0;\n	opts.animOut.top = h;\n};\n$.fn.cycle.transitions.scrollLeft = function($cont, $slides, opts) {\n	$cont.css('overflow','hidden');\n	opts.before.push($.fn.cycle.commonReset);\n	var w = $cont.width();\n	opts.cssFirst.left = 0;\n	opts.cssBefore.left = w;\n	opts.cssBefore.top = 0;\n	opts.animIn.left = 0;\n	opts.animOut.left = 0-w;\n};\n$.fn.cycle.transitions.scrollRight = function($cont, $slides, opts) {\n	$cont.css('overflow','hidden');\n	opts.before.push($.fn.cycle.commonReset);\n	var w = $cont.width();\n	opts.cssFirst.left = 0;\n	opts.cssBefore.left = -w;\n	opts.cssBefore.top = 0;\n	opts.animIn.left = 0;\n	opts.animOut.left = w;\n};\n$.fn.cycle.transitions.scrollHorz = function($cont, $slides, opts) {\n	$cont.css('overflow','hidden').width();\n	opts.before.push(function(curr, next, opts, fwd) {\n		if (opts.rev)\n			fwd = !fwd;\n		$.fn.cycle.commonReset(curr,next,opts);\n		opts.cssBefore.left = fwd ? (next.cycleW-1) : (1-next.cycleW);\n		opts.animOut.left = fwd ? -curr.cycleW : curr.cycleW;\n	});\n	opts.cssFirst.left = 0;\n	opts.cssBefore.top = 0;\n	opts.animIn.left = 0;\n	opts.animOut.top = 0;\n};\n$.fn.cycle.transitions.scrollVert = function($cont, $slides, opts) {\n	$cont.css('overflow','hidden');\n	opts.before.push(function(curr, next, opts, fwd) {\n		if (opts.rev)\n			fwd = !fwd;\n		$.fn.cycle.commonReset(curr,next,opts);\n		opts.cssBefore.top = fwd ? (1-next.cycleH) : (next.cycleH-1);\n		opts.animOut.top = fwd ? curr.cycleH : -curr.cycleH;\n	});\n	opts.cssFirst.top = 0;\n	opts.cssBefore.left = 0;\n	opts.animIn.top = 0;\n	opts.animOut.left = 0;\n};\n\n// slideX/slideY\n$.fn.cycle.transitions.slideX = function($cont, $slides, opts) {\n	opts.before.push(function(curr, next, opts) {\n		$(opts.elements).not(curr).hide();\n		$.fn.cycle.commonReset(curr,next,opts,false,true);\n		opts.animIn.width = next.cycleW;\n	});\n	opts.cssBefore.left = 0;\n	opts.cssBefore.top = 0;\n	opts.cssBefore.width = 0;\n	opts.animIn.width = 'show';\n	opts.animOut.width = 0;\n};\n$.fn.cycle.transitions.slideY = function($cont, $slides, opts) {\n	opts.before.push(function(curr, next, opts) {\n		$(opts.elements).not(curr).hide();\n		$.fn.cycle.commonReset(curr,next,opts,true,false);\n		opts.animIn.height = next.cycleH;\n	});\n	opts.cssBefore.left = 0;\n	opts.cssBefore.top = 0;\n	opts.cssBefore.height = 0;\n	opts.animIn.height = 'show';\n	opts.animOut.height = 0;\n};\n\n// shuffle\n$.fn.cycle.transitions.shuffle = function($cont, $slides, opts) {\n	var i, w = $cont.css('overflow', 'visible').width();\n	$slides.css({left: 0, top: 0});\n	opts.before.push(function(curr,next,opts) {\n		$.fn.cycle.commonReset(curr,next,opts,true,true,true);\n	});\n	// only adjust speed once!\n	if (!opts.speedAdjusted) {\n		opts.speed = opts.speed / 2; // shuffle has 2 transitions\n		opts.speedAdjusted = true;\n	}\n	opts.random = 0;\n	opts.shuffle = opts.shuffle || {left:-w, top:15};\n	opts.els = [];\n	for (i=0; i < $slides.length; i++)\n		opts.els.push($slides[i]);\n\n	for (i=0; i < opts.currSlide; i++)\n		opts.els.push(opts.els.shift());\n\n	// custom transition fn (hat tip to Benjamin Sterling for this bit of sweetness!)\n	opts.fxFn = function(curr, next, opts, cb, fwd) {\n		if (opts.rev)\n			fwd = !fwd;\n		var $el = fwd ? $(curr) : $(next);\n		$(next).css(opts.cssBefore);\n		var count = opts.slideCount;\n		$el.animate(opts.shuffle, opts.speedIn, opts.easeIn, function() {\n			var hops = $.fn.cycle.hopsFromLast(opts, fwd);\n			for (var k=0; k < hops; k++) {\n				if (fwd)\n					opts.els.push(opts.els.shift());\n				else\n					opts.els.unshift(opts.els.pop());\n			}\n			if (fwd) {\n				for (var i=0, len=opts.els.length; i < len; i++)\n					$(opts.els[i]).css('z-index', len-i+count);\n			}\n			else {\n				var z = $(curr).css('z-index');\n				$el.css('z-index', parseInt(z,10)+1+count);\n			}\n			$el.animate({left:0, top:0}, opts.speedOut, opts.easeOut, function() {\n				$(fwd ? this : curr).hide();\n				if (cb) cb();\n			});\n		});\n	};\n	$.extend(opts.cssBefore, { display: 'block', opacity: 1, top: 0, left: 0 });\n};\n\n// turnUp/Down/Left/Right\n$.fn.cycle.transitions.turnUp = function($cont, $slides, opts) {\n	opts.before.push(function(curr, next, opts) {\n		$.fn.cycle.commonReset(curr,next,opts,true,false);\n		opts.cssBefore.top = next.cycleH;\n		opts.animIn.height = next.cycleH;\n		opts.animOut.width = next.cycleW;\n	});\n	opts.cssFirst.top = 0;\n	opts.cssBefore.left = 0;\n	opts.cssBefore.height = 0;\n	opts.animIn.top = 0;\n	opts.animOut.height = 0;\n};\n$.fn.cycle.transitions.turnDown = function($cont, $slides, opts) {\n	opts.before.push(function(curr, next, opts) {\n		$.fn.cycle.commonReset(curr,next,opts,true,false);\n		opts.animIn.height = next.cycleH;\n		opts.animOut.top   = curr.cycleH;\n	});\n	opts.cssFirst.top = 0;\n	opts.cssBefore.left = 0;\n	opts.cssBefore.top = 0;\n	opts.cssBefore.height = 0;\n	opts.animOut.height = 0;\n};\n$.fn.cycle.transitions.turnLeft = function($cont, $slides, opts) {\n	opts.before.push(function(curr, next, opts) {\n		$.fn.cycle.commonReset(curr,next,opts,false,true);\n		opts.cssBefore.left = next.cycleW;\n		opts.animIn.width = next.cycleW;\n	});\n	opts.cssBefore.top = 0;\n	opts.cssBefore.width = 0;\n	opts.animIn.left = 0;\n	opts.animOut.width = 0;\n};\n$.fn.cycle.transitions.turnRight = function($cont, $slides, opts) {\n	opts.before.push(function(curr, next, opts) {\n		$.fn.cycle.commonReset(curr,next,opts,false,true);\n		opts.animIn.width = next.cycleW;\n		opts.animOut.left = curr.cycleW;\n	});\n	$.extend(opts.cssBefore, { top: 0, left: 0, width: 0 });\n	opts.animIn.left = 0;\n	opts.animOut.width = 0;\n};\n\n// zoom\n$.fn.cycle.transitions.zoom = function($cont, $slides, opts) {\n	opts.before.push(function(curr, next, opts) {\n		$.fn.cycle.commonReset(curr,next,opts,false,false,true);\n		opts.cssBefore.top = next.cycleH/2;\n		opts.cssBefore.left = next.cycleW/2;\n		$.extend(opts.animIn, { top: 0, left: 0, width: next.cycleW, height: next.cycleH });\n		$.extend(opts.animOut, { width: 0, height: 0, top: curr.cycleH/2, left: curr.cycleW/2 });\n	});\n	opts.cssFirst.top = 0;\n	opts.cssFirst.left = 0;\n	opts.cssBefore.width = 0;\n	opts.cssBefore.height = 0;\n};\n\n// fadeZoom\n$.fn.cycle.transitions.fadeZoom = function($cont, $slides, opts) {\n	opts.before.push(function(curr, next, opts) {\n		$.fn.cycle.commonReset(curr,next,opts,false,false);\n		opts.cssBefore.left = next.cycleW/2;\n		opts.cssBefore.top = next.cycleH/2;\n		$.extend(opts.animIn, { top: 0, left: 0, width: next.cycleW, height: next.cycleH });\n	});\n	opts.cssBefore.width = 0;\n	opts.cssBefore.height = 0;\n	opts.animOut.opacity = 0;\n};\n\n// blindX\n$.fn.cycle.transitions.blindX = function($cont, $slides, opts) {\n	var w = $cont.css('overflow','hidden').width();\n	opts.before.push(function(curr, next, opts) {\n		$.fn.cycle.commonReset(curr,next,opts);\n		opts.animIn.width = next.cycleW;\n		opts.animOut.left   = curr.cycleW;\n	});\n	opts.cssBefore.left = w;\n	opts.cssBefore.top = 0;\n	opts.animIn.left = 0;\n	opts.animOut.left = w;\n};\n// blindY\n$.fn.cycle.transitions.blindY = function($cont, $slides, opts) {\n	var h = $cont.css('overflow','hidden').height();\n	opts.before.push(function(curr, next, opts) {\n		$.fn.cycle.commonReset(curr,next,opts);\n		opts.animIn.height = next.cycleH;\n		opts.animOut.top   = curr.cycleH;\n	});\n	opts.cssBefore.top = h;\n	opts.cssBefore.left = 0;\n	opts.animIn.top = 0;\n	opts.animOut.top = h;\n};\n// blindZ\n$.fn.cycle.transitions.blindZ = function($cont, $slides, opts) {\n	var h = $cont.css('overflow','hidden').height();\n	var w = $cont.width();\n	opts.before.push(function(curr, next, opts) {\n		$.fn.cycle.commonReset(curr,next,opts);\n		opts.animIn.height = next.cycleH;\n		opts.animOut.top   = curr.cycleH;\n	});\n	opts.cssBefore.top = h;\n	opts.cssBefore.left = w;\n	opts.animIn.top = 0;\n	opts.animIn.left = 0;\n	opts.animOut.top = h;\n	opts.animOut.left = w;\n};\n\n// growX - grow horizontally from centered 0 width\n$.fn.cycle.transitions.growX = function($cont, $slides, opts) {\n	opts.before.push(function(curr, next, opts) {\n		$.fn.cycle.commonReset(curr,next,opts,false,true);\n		opts.cssBefore.left = this.cycleW/2;\n		opts.animIn.left = 0;\n		opts.animIn.width = this.cycleW;\n		opts.animOut.left = 0;\n	});\n	opts.cssBefore.top = 0;\n	opts.cssBefore.width = 0;\n};\n// growY - grow vertically from centered 0 height\n$.fn.cycle.transitions.growY = function($cont, $slides, opts) {\n	opts.before.push(function(curr, next, opts) {\n		$.fn.cycle.commonReset(curr,next,opts,true,false);\n		opts.cssBefore.top = this.cycleH/2;\n		opts.animIn.top = 0;\n		opts.animIn.height = this.cycleH;\n		opts.animOut.top = 0;\n	});\n	opts.cssBefore.height = 0;\n	opts.cssBefore.left = 0;\n};\n\n// curtainX - squeeze in both edges horizontally\n$.fn.cycle.transitions.curtainX = function($cont, $slides, opts) {\n	opts.before.push(function(curr, next, opts) {\n		$.fn.cycle.commonReset(curr,next,opts,false,true,true);\n		opts.cssBefore.left = next.cycleW/2;\n		opts.animIn.left = 0;\n		opts.animIn.width = this.cycleW;\n		opts.animOut.left = curr.cycleW/2;\n		opts.animOut.width = 0;\n	});\n	opts.cssBefore.top = 0;\n	opts.cssBefore.width = 0;\n};\n// curtainY - squeeze in both edges vertically\n$.fn.cycle.transitions.curtainY = function($cont, $slides, opts) {\n	opts.before.push(function(curr, next, opts) {\n		$.fn.cycle.commonReset(curr,next,opts,true,false,true);\n		opts.cssBefore.top = next.cycleH/2;\n		opts.animIn.top = 0;\n		opts.animIn.height = next.cycleH;\n		opts.animOut.top = curr.cycleH/2;\n		opts.animOut.height = 0;\n	});\n	opts.cssBefore.height = 0;\n	opts.cssBefore.left = 0;\n};\n\n// cover - curr slide covered by next slide\n$.fn.cycle.transitions.cover = function($cont, $slides, opts) {\n	var d = opts.direction || 'left';\n	var w = $cont.css('overflow','hidden').width();\n	var h = $cont.height();\n	opts.before.push(function(curr, next, opts) {\n		$.fn.cycle.commonReset(curr,next,opts);\n		opts.cssAfter.display = '';\n		if (d == 'right')\n			opts.cssBefore.left = -w;\n		else if (d == 'up')\n			opts.cssBefore.top = h;\n		else if (d == 'down')\n			opts.cssBefore.top = -h;\n		else\n			opts.cssBefore.left = w;\n	});\n	opts.animIn.left = 0;\n	opts.animIn.top = 0;\n	opts.cssBefore.top = 0;\n	opts.cssBefore.left = 0;\n};\n\n// uncover - curr slide moves off next slide\n$.fn.cycle.transitions.uncover = function($cont, $slides, opts) {\n	var d = opts.direction || 'left';\n	var w = $cont.css('overflow','hidden').width();\n	var h = $cont.height();\n	opts.before.push(function(curr, next, opts) {\n		$.fn.cycle.commonReset(curr,next,opts,true,true,true);\n		if (d == 'right')\n			opts.animOut.left = w;\n		else if (d == 'up')\n			opts.animOut.top = -h;\n		else if (d == 'down')\n			opts.animOut.top = h;\n		else\n			opts.animOut.left = -w;\n	});\n	opts.animIn.left = 0;\n	opts.animIn.top = 0;\n	opts.cssBefore.top = 0;\n	opts.cssBefore.left = 0;\n};\n\n// toss - move top slide and fade away\n$.fn.cycle.transitions.toss = function($cont, $slides, opts) {\n	var w = $cont.css('overflow','visible').width();\n	var h = $cont.height();\n	opts.before.push(function(curr, next, opts) {\n		$.fn.cycle.commonReset(curr,next,opts,true,true,true);\n		// provide default toss settings if animOut not provided\n		if (!opts.animOut.left && !opts.animOut.top)\n			$.extend(opts.animOut, { left: w*2, top: -h/2, opacity: 0 });\n		else\n			opts.animOut.opacity = 0;\n	});\n	opts.cssBefore.left = 0;\n	opts.cssBefore.top = 0;\n	opts.animIn.left = 0;\n};\n\n// wipe - clip animation\n$.fn.cycle.transitions.wipe = function($cont, $slides, opts) {\n	var w = $cont.css('overflow','hidden').width();\n	var h = $cont.height();\n	opts.cssBefore = opts.cssBefore || {};\n	var clip;\n	if (opts.clip) {\n		if (/l2r/.test(opts.clip))\n			clip = 'rect(0px 0px '+h+'px 0px)';\n		else if (/r2l/.test(opts.clip))\n			clip = 'rect(0px '+w+'px '+h+'px '+w+'px)';\n		else if (/t2b/.test(opts.clip))\n			clip = 'rect(0px '+w+'px 0px 0px)';\n		else if (/b2t/.test(opts.clip))\n			clip = 'rect('+h+'px '+w+'px '+h+'px 0px)';\n		else if (/zoom/.test(opts.clip)) {\n			var top = parseInt(h/2,10);\n			var left = parseInt(w/2,10);\n			clip = 'rect('+top+'px '+left+'px '+top+'px '+left+'px)';\n		}\n	}\n\n	opts.cssBefore.clip = opts.cssBefore.clip || clip || 'rect(0px 0px 0px 0px)';\n\n	var d = opts.cssBefore.clip.match(/(\\d+)/g);\n	var t = parseInt(d[0],10), r = parseInt(d[1],10), b = parseInt(d[2],10), l = parseInt(d[3],10);\n\n	opts.before.push(function(curr, next, opts) {\n		if (curr == next) return;\n		var $curr = $(curr), $next = $(next);\n		$.fn.cycle.commonReset(curr,next,opts,true,true,false);\n		opts.cssAfter.display = 'block';\n\n		var step = 1, count = parseInt((opts.speedIn / 13),10) - 1;\n		(function f() {\n			var tt = t ? t - parseInt(step * (t/count),10) : 0;\n			var ll = l ? l - parseInt(step * (l/count),10) : 0;\n			var bb = b < h ? b + parseInt(step * ((h-b)/count || 1),10) : h;\n			var rr = r < w ? r + parseInt(step * ((w-r)/count || 1),10) : w;\n			$next.css({ clip: 'rect('+tt+'px '+rr+'px '+bb+'px '+ll+'px)' });\n			(step++ <= count) ? setTimeout(f, 13) : $curr.css('display', 'none');\n		})();\n	});\n	$.extend(opts.cssBefore, { display: 'block', opacity: 1, top: 0, left: 0 });\n	opts.animIn	   = { left: 0 };\n	opts.animOut   = { left: 0 };\n};\n\n})(jQuery);\n",
			"file": "js/jquery.cycle.all.js",
			"file_size": 51679,
			"file_write_time": 130041418007259108,
			"settings":
			{
				"buffer_size": 51683,
				"line_ending": "Unix"
			}
		},
		{
			"file": "css/impress-demo.css",
			"settings":
			{
				"buffer_size": 24262,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 392.0,
		"selected_items":
		[
			[
				"html",
				"Set Syntax: HTML"
			],
			[
				"java",
				"Set Syntax: Java"
			],
			[
				"git comm",
				"Git: Commit"
			],
			[
				"git add",
				"Git: Add..."
			],
			[
				"git",
				"Git: Diff All"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"Package Control: ",
				"Package Control: Remove Package"
			],
			[
				"c#",
				"Set Syntax: C#"
			]
		],
		"width": 512.0
	},
	"console":
	{
		"height": 0.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/D/wamp/demo/slides/js/highcharts/highcharts.src.js",
		"/D/wamp/demo/slides/css/impress-demo.css",
		"/D/wamp/demo/slides/index.php",
		"/D/wamp/www/gtl/application/views/templates/header.php",
		"/D/wamp/www/gtl/application/views/pages/home.php",
		"/D/wamp/www/gtl/application/cache/.htaccess",
		"/D/wamp/demo/slides/README.md",
		"/D/wamp/demo/slides/index1.html",
		"/D/wamp/www/survey/application/views/schools/edit.php",
		"/D/wamp/www/survey/application/controllers/schools.php",
		"/D/wamp/www/survey/system/libraries/Form_validation.php",
		"/D/wamp/www/survey/system/helpers/url_helper.php",
		"/D/wamp/www/survey/application/controllers/reports.php",
		"/D/wamp/www/survey/application/views/reports/create.php",
		"/D/wamp/www/survey/application/views/reports/edit.php",
		"/D/wamp/www/survey/application/views/reports/view.php",
		"/D/wamp/www/survey/application/views/reports/index.php",
		"/D/wamp/www/survey/application/views/schools/create.php",
		"/D/wamp/www/survey/application/views/schools/view.php",
		"/D/wamp/www/survey/application/views/schools/delete.php",
		"/C/Users/AHMAD/AppData/Roaming/Sublime Text 2/Packages/User/Preferences.sublime-settings",
		"/D/wamp/demo/ci/system/database/DB_result.php",
		"/D/wamp/demo/ci/theme/admin/css/main.css",
		"/D/wamp/demo/ci/theme/admin/js/main.js",
		"/D/wamp/demo/ci/application/views/admin/tmpl/footer.php",
		"/D/wamp/demo/ci/application/controllers/admin/pages.php",
		"/D/wamp/demo/ci/application/views/admin/pages/create.php",
		"/D/wamp/demo/ci/application/views/admin/pages/index.php",
		"/D/wamp/demo/ci/theme/admin/js/plugins.js",
		"/D/wamp/demo/ci/theme/site/js/plugins.js",
		"/D/wamp/demo/ci/application/config/config.php",
		"/D/wamp/demo/ci/application/views/admin/tmpl/header.php",
		"/D/wamp/demo/ci/theme/admin/js/jquery.validation.min.js",
		"/D/wamp/demo/ci/application/config/autoload.php",
		"/D/wamp/demo/ci/theme/admin/js/vendor/tiny_mce/plugins/directionality/editor_plugin_src.js",
		"/C/Users/AHMAD/AppData/Roaming/Sublime Text 2/Packages/User/Default (Windows).sublime-keymap",
		"/C/Users/AHMAD/AppData/Roaming/Sublime Text 2/Packages/Default/Default (Windows).sublime-keymap"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"p",
			"font-size:120%",
			"span",
			"easing",
			" 0 ",
			"0 |",
			"0 ",
			"0",
			"logo",
			"http://themes.googleusercontent.com/static/fonts/ptserif/v4/",
			"http://themes.googleusercontent.com/static/fonts/ptsans/v4/",
			"http://themes.googleusercontent.com/static/fonts/opensans/v6/",
			"<",
			"key = ",
			",",
			"        \n",
			"var_dumop",
			"echo",
			"var_dump",
			" set_value('additional",
			"5",
			"\"></",
			">\n",
			"additional1",
			"year",
			"                '",
			"set_value('additional",
			"set_value('additional1')",
			"                ",
			"additional1",
			"students_sex",
			"additiona",
			"additional",
			"additional1",
			"Schedule_",
			"]",
			" [time](7) NOT NULL,",
			"<td",
			"\n	// --------------------------------------------------------------------\n\n	/**\n	 * return a mapped version of the result, useful for dropdown list.\n	 *\n	 * @access	public\n	 * @param	key_field	the field that will be the key in the map \n	 * @param	value_field	the field that will be the value in the map \n	 * @return	array	the mapped array\n	 */\n	public function map_array($key_field, $value_field){\n\n		$result = array();\n		foreach ($this->result_array() as $row) {\n		 	$result[ $row[$key_field] ] = $row[$value_field];\n		 } \n\n		return $result;\n	}",
			"xss",
			"form_open",
			"helper",
			"php",
			"title",
			"Title",
			"<label>Title</label>\n	<input type=\"text\" name=\"title\" placeholder=\"Page title &hellip;\">\n"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "slide.html",
					"settings":
					{
						"buffer_size": 6274,
						"regions":
						{
						},
						"selection":
						[
							[
								442,
								442
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "index.php",
					"settings":
					{
						"buffer_size": 26897,
						"regions":
						{
						},
						"selection":
						[
							[
								5894,
								5894
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1512.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "js/jquery.cycle.all.js",
					"settings":
					{
						"buffer_size": 51683,
						"regions":
						{
						},
						"selection":
						[
							[
								33376,
								33355
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 21169.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "css/impress-demo.css",
					"settings":
					{
						"buffer_size": 24262,
						"regions":
						{
						},
						"selection":
						[
							[
								24262,
								24262
							]
						],
						"settings":
						{
							"syntax": "Packages/CSS/CSS.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 10751.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 0.0
	},
	"input":
	{
		"height": 30.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.git":
	{
		"height": 94.0
	},
	"replace":
	{
		"height": 0.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"impres",
				"css/impress-demo.css"
			],
			[
				"pages/home",
				"application/views/pages/home.php"
			],
			[
				"header",
				"application/views/templates/header.php"
			],
			[
				"pages/ho",
				"application/views/pages/home.php"
			],
			[
				"",
				"application/cache/.htaccess"
			],
			[
				"css/",
				"css/impress-demo.css"
			],
			[
				"form_validation.php",
				"system/libraries/Form_validation.php"
			],
			[
				"helpers/url_helper.php",
				"system/helpers/url_helper.php"
			],
			[
				"schools.php",
				"application/controllers/schools.php"
			],
			[
				"schoolsedit",
				"application/views/schools/edit.php"
			],
			[
				"reportsindex",
				"application/views/reports/index.php"
			],
			[
				"reportsview",
				"application/views/reports/view.php"
			],
			[
				"reportsedit",
				"application/views/reports/edit.php"
			],
			[
				"scholcreate",
				"application/views/schools/create.php"
			],
			[
				"reports/create",
				"application/views/reports/create.php"
			],
			[
				"reports",
				"application/controllers/reports.php"
			],
			[
				"schools/view",
				"application/views/schools/view.php"
			],
			[
				"schools/edi",
				"application/views/schools/edit.php"
			],
			[
				"school",
				"application/views/schools/delete.php"
			],
			[
				"schools/create",
				"application/views/schools/create.php"
			],
			[
				"create.php",
				"application/views/admin/pages/create.php"
			],
			[
				"pages/inde",
				"application/views/admin/pages/index.php"
			],
			[
				"result.php",
				"system/database/DB_result.php"
			],
			[
				"controllers/admin/pa",
				"application/controllers/admin/pages.php"
			],
			[
				"plugins",
				"theme/admin/js/plugins.js"
			],
			[
				"footer",
				"application/views/admin/tmpl/footer.php"
			],
			[
				"main",
				"theme/admin/js/main.js"
			],
			[
				"config.php",
				"application/config/config.php"
			],
			[
				"pages.php",
				"application/controllers/admin/pages.php"
			],
			[
				"main.css",
				"theme/admin/css/main.css"
			],
			[
				"autload",
				"application/config/autoload.php"
			],
			[
				"main.js",
				"theme/admin/js/main.js"
			],
			[
				"create",
				"theme/admin/js/vendor/tiny_mce/plugins/directionality/editor_plugin_src.js"
			],
			[
				"admin/pages/",
				"application/views/admin/pages/index.php"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
		],
		"width": 380.0
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 299.0,
	"status_bar_visible": true
}
